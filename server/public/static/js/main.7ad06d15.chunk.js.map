{"version":3,"sources":["components/ProposalsTable/ProposalsTable.module.scss","components/Header/Header.module.scss","components/Proposals/Proposals.module.scss","util/web3React.ts","config/index.ts","contexts/AlertProvider.tsx","util/wallet.ts","hooks/useAlert.ts","hooks/useAuth.ts","util/index.ts","components/Header/Header.tsx","util/contracts.ts","hooks/useWeb3Provider.ts","hooks/useBlockNumber.ts","hooks/useMultisig.ts","hooks/useContract.ts","components/CreateProposal/CreateProposal.tsx","api/index.ts","api/bsc.ts","components/CreateProposal/ProposalDetails.tsx","hooks/useProposal.ts","components/ProposalsTable/ProposalsTable.tsx","components/Proposals/Proposals.tsx","UI/Alert/Alert.tsx","App.tsx","reportWebVitals.ts","Providers.tsx","index.tsx","components/CreateProposal/CreateProposal.module.scss","UI/Alert/Alert.module.scss"],"names":["module","exports","ConnectorNames","defaultChainId","safeStorageAddress","multisigAddress","multicallAddress","56","97","classAlert","injected","InjectedConnector","supportedChainIds","bscConnector","BscConnector","connectorsByName","Injected","BSC","getLibrary","provider","library","Web3Provider","chainId","parseInt","pollingInterval","setupNetwork","a","window","ethereum","request","method","params","toString","console","error","initialState","text","cls","info","show","alertReducer","state","action","type","payload","AlertContext","createContext","alert","hideAlert","showAlert","AlertProvider","children","useReducer","dispatch","Provider","value","useAlert","useContext","useAuth","useWeb3React","activate","deactivate","defaultConnectorKey","localStorage","getItem","login","useCallback","connectorKey","connector","log","message","UnsupportedChainIdError","success","logout","shortAddress","address","length","slice","Header","account","onLogin","className","classes","join","onClick","nodes","RPC_URL","randomIndex","random","getNodeUrl","simpleRpcProvider","ethers","providers","JsonRpcProvider","getContract","abi","signer","signerOrProvider","Contract","useWeb3Provider","refEth","useRef","useState","setProvider","useEffect","current","useBlockNumber","EStatus","blockNumber","setBlockNumber","interval","setInterval","getBlockNumber","then","res","catch","e","clearInterval","Status","EMPTY","INITIALIZED","CANCELLED","QUEUED","EXECUTED","useMultisig","cancel","create","sign","execute","pending","setPending","multisigContract","useMemo","MultisigAbi","getSigner","useMultisigContract","multicallContract","MulticallAbi","useMulticallContract","proposalCount","setProposalCount","proposals","setProposals","getData","toNumber","err","proposalsIds","limit","ids","i","push","proposalsProps","encodes","proposalsId","fragment","interface","getFunction","encodeFunctions","encodeFunctionData","getStatusProps","fragmentProposals","fragmentGetStatus","aggregate","_","concat","resData","getStatusData","map","item","decodeFunctionResult","proposalsData","id","status","createAndSign","proposal","prevState","setTimeout","onSign","proposalId","from","wait","result","hash","finally","onExecute","onCancel","CreateProposal","countInputsBlock","setCountInputsBlock","useForm","mode","reValidateMode","register","formState","isValid","errors","handleSubmit","reset","getValues","control","setValue","onSubmit","data","dataObj","description","dataKey","hasOwnProperty","test","split","key","Object","values","contractData","targets","signatures","calldatas","callFrom","target","callDatas","toWei","addInputsBlockHandler","lastNumber","last","undefined","removeInputsBlockHandler","remove","newData","resultKey","resSplit","current_id","keys","setValueHandler","cid","isFirst","showDescription","onRemove","ButtonBlock","Left","ButtonDesc","disabled","apiKey","baseAPI","getABI","axios","get","ProposalDetails","currentMethod","setCurrentMethod","isPayable","stateMutability","useWatch","name","inputs","contractFunc","setContractFunc","contractInterface","setContractInterface","getABIHandle","Promise","resolve","addRes","addErr","Interface","payableFunc","JSON","parse","filter","uniqBy","func","isAddress","useProposal","onHexHandler","inputsArr","input","trim","Boolean","callData","curMethod","find","onInputsValidate","arrValue","isEmptyArgs","inputsForMethod","renderInputsName","ProposalColumn","htmlFor","validate","required","minLength","placeholder","maxLength","ProposalsTable","Wrapper","Proposals","Alert","delay","clearTimeout","Text","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Providers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad06d15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ProposalsTable_Wrapper__J8UFT\",\"ProposalsTable\":\"ProposalsTable_ProposalsTable__3uunA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Proposals\":\"Proposals_Proposals__1sSZ_\"};","import {InjectedConnector} from '@web3-react/injected-connector'\nimport {defaultChainId} from \"../config\";\nimport {Web3Provider} from \"@ethersproject/providers\";\nimport { BscConnector } from '@binance-chain/bsc-connector'\n\nexport enum ConnectorNames {\n    Injected = \"injected\",\n    WalletConnect = \"walletconnect\",\n    BSC = \"bsc\",\n}\n\nconst injected = new InjectedConnector({ supportedChainIds: [defaultChainId] })\n\nconst bscConnector = new BscConnector({ supportedChainIds: [56, 97] })\n\nexport const connectorsByName: {[connectorName in ConnectorNames | string]: any} = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider: any): Web3Provider => {\n    const library = new Web3Provider(\n        provider,\n        typeof provider.chainId === 'number'\n            ? provider.chainId\n            : typeof provider.chainId === 'string'\n            ? parseInt(provider.chainId)\n            : 'any'\n    )\n    library.pollingInterval = 15_000\n    return library\n}","import MulticallAbi from './abi/Multicall.json'\nimport MultisigAbi from './abi/Multisig.json'\nimport SafeStorageAbi from './abi/SafeStorage.json'\nimport TimelockAbi from './abi/Timelock.json'\n\n// BSC chainId = 56\n// BSCTestNet chainId = 97\n// export const defaultChainId = 97;\nexport const defaultChainId = 56;\nexport const storageConnectorKey = 'proposal_connector'\n\nconst safeStorageAddress = {\n    '56': '0xe5a65aee2E66178432d3f71984761514856D8f6E',\n    '97': '0x64320DDB7A84E95E82B25A7727d3D514EBE397cE',\n};\nconst timelockAddress = {\n    '56': '0xc6f9973c41e84451C4366e874F0C9F5Cdb2342ed',\n    '97': '0xa3f6dD5c4753c7F0BFE661055329c0B9D3103b2F',\n};\nconst multisigAddress = {\n    '56': '0x535eef3bf36C74Eb9d235Ef4F1bb551C12F91222',\n    '97': '0x25A37D08341d90d2deAe5096dE029DE12727daA0',\n};\nconst multicallAddress = {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0xE226fe842b0A986c86f18c9Fd1A751CAb28bc951',\n};\n\nexport {\n    timelockAddress,\n    safeStorageAddress,\n    multisigAddress,\n    multicallAddress,\n    MulticallAbi,\n    MultisigAbi,\n    SafeStorageAbi,\n    TimelockAbi\n}","import React, {createContext, useReducer} from \"react\";\n\nexport enum classAlert {\n    info = 'Info',\n    error = 'Error',\n    success = 'Success',\n}\n\ninterface AlertState {\n    text: string,\n    cls: classAlert\n    show: boolean\n}\n\nconst initialState: AlertState = {\n    text: '',\n    cls: classAlert.info,\n    show: false\n}\n\ninterface AlertActionProps {\n    text: string,\n    cls: classAlert\n}\n\nexport const alertReducer = (state: AlertState, action: any) => {\n    switch (action.type) {\n        case 'hide' :\n            return initialState;\n        case 'show' :\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const AlertContext = createContext<{\n    alert: AlertState,\n    hideAlert: () => void,\n    showAlert: ({text, cls}: AlertActionProps) => void,\n}>({\n    alert: initialState,\n    hideAlert: () => {},\n    showAlert: ({text, cls}) => {},\n});\n\nexport default function AlertProvider({children}: any) {\n    const [alert, dispatch] = useReducer(alertReducer, initialState);\n    const hideAlert = () => {\n        dispatch({type: \"hide\"})\n    };\n    const showAlert = ({text, cls}: AlertActionProps) => {\n        dispatch({type: \"show\", payload: {cls, text, show: true}});\n    };\n\n    return (\n        <AlertContext.Provider\n            value={{\n                alert,\n                hideAlert,\n                showAlert\n            }}\n        >\n            {children}\n        </AlertContext.Provider>\n    )\n\n}","/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async (chainId: number) => {\n    const provider: any = (window as WindowChain).ethereum\n    if (provider) {\n        try {\n            await provider.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{\n                    chainId: `0x${chainId.toString(16)}`,\n                }]\n            })\n            return true\n        } catch (error) {\n            console.error(error)\n            return false\n        }\n    } else {\n        console.error(\"Can't setup the ETH network on metamask because window.ethereum is undefined\")\n        return false\n    }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n    tokenAddress: string,\n    tokenSymbol: string,\n    tokenDecimals: number,\n    tokenImage: string\n) => {\n    const provider: any = (window as WindowChain).ethereum\n    let tokenAdded: any\n    if (provider) {\n        tokenAdded = await provider.request({\n            method: 'wallet_watchAsset',\n            params: {\n                type: 'ERC20',\n                options: {\n                    address: tokenAddress,\n                    symbol: tokenSymbol,\n                    decimals: tokenDecimals,\n                    image: tokenImage,\n                },\n            },\n        })\n    }\n\n    return tokenAdded\n}\n","import { useContext } from \"react\";\nimport { AlertContext } from \"../contexts/AlertProvider\";\n\nexport function useAlert() {\n    const {alert, showAlert, hideAlert} = useContext(AlertContext)\n\n    return {\n        alert,\n        showAlert,\n        hideAlert\n    }\n}","import {UnsupportedChainIdError, useWeb3React} from \"@web3-react/core\";\nimport {useCallback} from \"react\";\nimport {defaultChainId, storageConnectorKey} from \"../config\";\nimport {ConnectorNames, connectorsByName} from \"../util/web3React\";\nimport {setupNetwork} from \"../util/wallet\";\nimport {useAlert} from \"./useAlert\";\nimport {classAlert} from \"../contexts/AlertProvider\";\n\nfunction useAuth() {\n    const {activate, deactivate} = useWeb3React()\n    const {showAlert} = useAlert()\n    const defaultConnectorKey = window.localStorage.getItem(storageConnectorKey) || ConnectorNames.Injected\n\n    const login = useCallback((connectorKey: ConnectorNames | string = defaultConnectorKey) => {\n        const connector: any = connectorsByName[connectorKey]\n        if (connector) {\n            activate(connector, async (error) => {\n                console.log(error.message || error )\n                if (error instanceof UnsupportedChainIdError) {\n                    const hasSetup = await setupNetwork(defaultChainId)\n                    if (hasSetup) {\n                        activate(connector)\n                        showAlert({text: 'Change Network: Success', cls: classAlert.success})\n                    } else {\n                        showAlert({text: error.message, cls: classAlert.error})\n                    }\n                }\n            })\n        } else {\n            console.info('Connector is Failed')\n        }\n    }, [activate, defaultConnectorKey, showAlert])\n\n    const logout = useCallback(() => {\n        deactivate();\n    }, [deactivate])\n\n    return {\n        login,\n        logout\n    }\n}\n\nexport default useAuth;","export function escapeRegExp(string: string): string {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function scrollToElement(event: any, href: string) {\n    event.preventDefault();\n    const id = href.split('#')[1]\n    if (id) {\n        const element = document.getElementById(id);\n        if (element) {\n            const top = element.offsetTop;\n            window.scrollBy({\n                top: top,\n                behavior: 'smooth',\n            })\n        }\n    }\n}\n\nexport const shortAddress = (address: string) => {\n    if (address.length <= 12) return address\n    return `${address.slice(0, 6)}...${address.slice(-6)}`\n}","import React, {useCallback} from 'react';\nimport classes from './Header.module.scss';\nimport {useWeb3React} from \"@web3-react/core\";\nimport {shortAddress} from \"../../util\";\nimport useAuth from \"../../hooks/useAuth\";\n\nfunction Header() {\n\n    const {account} = useWeb3React()\n    const {login} = useAuth()\n\n    const onLogin = useCallback(() => {\n        if (!account) {\n            login()\n        }\n    }, [account, login])\n\n    return (\n        <div className={['container', classes.Header].join(' ')}>\n            <button onClick={onLogin} className=\"button\">{account ? shortAddress(account) : 'Connect'}</button>\n        </div>\n    );\n}\n\nexport default Header;","import {Contract, ethers} from \"ethers\"\nimport random from 'lodash/random'\nimport {defaultChainId} from \"../config\";\n\nexport const nodes: any = {\n    56: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545',\n        'https://data-seed-prebsc-2-s1.binance.org:8545',\n        'https://data-seed-prebsc-1-s2.binance.org:8545',\n        'https://data-seed-prebsc-2-s2.binance.org:8545',\n        'https://data-seed-prebsc-1-s3.binance.org:8545',\n        'https://data-seed-prebsc-2-s3.binance.org:8545',\n    ],\n    97: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545',\n        'https://data-seed-prebsc-2-s1.binance.org:8545',\n        'https://data-seed-prebsc-1-s2.binance.org:8545',\n        'https://data-seed-prebsc-2-s2.binance.org:8545',\n        'https://data-seed-prebsc-1-s3.binance.org:8545',\n        'https://data-seed-prebsc-2-s3.binance.org:8545',\n    ]\n}\nexport const getNodeUrl = () => {\n    const randomIndex = random(0, nodes[defaultChainId].length - 1)\n    return nodes[defaultChainId][randomIndex]\n}\n\nconst RPC_URL = getNodeUrl();\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport const getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider): Contract => {\n    const signerOrProvider = signer ?? simpleRpcProvider\n    return new ethers.Contract(address, abi, signerOrProvider)\n}","import { useEffect, useState, useRef } from 'react'\nimport { ethers } from 'ethers'\nimport { useWeb3React } from '@web3-react/core'\nimport {simpleRpcProvider} from \"../util/contracts\";\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3Provider = (): ethers.providers.JsonRpcProvider | ethers.providers.Web3Provider => {\n    const { library } = useWeb3React()\n    const refEth = useRef(library)\n    const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n    useEffect(() => {\n        if (library !== refEth.current) {\n            setProvider(library || simpleRpcProvider)\n            refEth.current = library\n        }\n    }, [library])\n\n    return provider\n}\n\nexport default useWeb3Provider","import {useWeb3React} from \"@web3-react/core\";\nimport {useEffect, useState} from \"react\";\n\nfunction useBlockNumber(): number {\n    const [blockNumber, setBlockNumber] = useState<number>(0);\n    const {library} = useWeb3React()\n\n    useEffect(() => {\n        if (library) {\n            let interval = setInterval(() => {\n                library.getBlockNumber()\n                    .then((res: any) => {\n                        setBlockNumber(res)\n                    })\n                    .catch((e: any) => {\n                        console.info(e.message || e)\n                    })\n            }, 15000)\n            return () => {\n                clearInterval(interval)\n            }\n        }\n    }, [library, setBlockNumber])\n    return blockNumber\n}\n\nexport default useBlockNumber;","import {useMulticallContract, useMultisigContract} from \"./useContract\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {useAlert} from \"./useAlert\";\nimport {classAlert} from \"../contexts/AlertProvider\";\nimport {shortAddress} from \"../util\";\nimport useBlockNumber from \"./useBlockNumber\";\nimport {BigNumber} from \"ethers\";\nimport {defaultChainId, multisigAddress} from \"../config\";\nimport _ from \"lodash\";\n\ninterface IProposal {\n    targets: string[],\n    values: string[],\n    signatures: string[],\n    calldatas: string[],\n    description: string\n}\n\nexport enum EStatus {\n    EMPTY, // zero state\n    INITIALIZED, // created with one sign\n    CANCELLED, // canceled by consensus\n    QUEUED, // approved and send to timelock\n    EXECUTED // executed\n}\n\nexport const Status: { [status in EStatus | number]: string } = {\n    [EStatus.EMPTY]: 'Empty',\n    [EStatus.INITIALIZED]: 'INITIALIZED',\n    [EStatus.CANCELLED]: 'CANCELLED',\n    [EStatus.QUEUED]: 'QUEUED',\n    [EStatus.EXECUTED]: 'EXECUTED',\n}\n\nexport function useMultisig() {\n    const {account} = useWeb3React()\n    const [pending, setPending] = useState<{ [method: string]: boolean }>({\n        cancel: false,\n        create: false,\n        sign: false,\n        execute: false,\n    });\n    const multisigContract = useMultisigContract()\n    const multicallContract = useMulticallContract()\n    const blockNumber = useBlockNumber()\n    const {showAlert} = useAlert()\n    const [proposalCount, setProposalCount] = useState<number>(0);\n    const [proposals, setProposals] = useState<any[]>([]);\n\n    const getData = useCallback(() => {\n        if (multisigContract) {\n            multisigContract.proposalCount()\n                .then((res: BigNumber) => {\n                    setProposalCount(res.toNumber())\n                })\n                .catch((err: any) => {\n                    console.log(err.message || err)\n                })\n        }\n    }, [multisigContract])\n\n    useEffect(() => {\n        getData()\n    }, [getData, blockNumber])\n\n    const proposalsIds = useMemo(() => {\n        if (proposalCount > 0 && multisigContract) {\n            const limit = proposalCount > 10 ? proposalCount - 10 : 0\n            const ids: number[] = []\n            for (let i = proposalCount; i > limit; i--) {\n                ids.push(i)\n            }\n            return ids\n        }\n        return []\n    }, [multisigContract, proposalCount])\n\n    const proposalsProps = useMemo(() => {\n        if (proposalsIds.length > 0 && multisigContract) {\n            const encodes: Array<[string, string]> = []\n            for (const proposalsId of proposalsIds) {\n                const fragment = multisigContract.interface.getFunction('proposals');\n                const encodeFunctions = multisigContract.interface.encodeFunctionData(fragment, [proposalsId])\n                encodes.push([multisigAddress[defaultChainId], encodeFunctions])\n            }\n            return encodes\n        }\n        return []\n    }, [multisigContract, proposalsIds])\n\n    const getStatusProps = useMemo(() => {\n        if (proposalsIds.length > 0 && multisigContract) {\n            const encodes: Array<[string, string]> = []\n            for (const proposalsId of proposalsIds) {\n                const fragment = multisigContract.interface.getFunction('getStatus');\n                const encodeFunctions = multisigContract.interface.encodeFunctionData(fragment, [proposalsId])\n                encodes.push([multisigAddress[defaultChainId], encodeFunctions])\n            }\n            return encodes\n        }\n        return []\n    }, [multisigContract, proposalsIds])\n\n    useEffect(() => {\n        if (multicallContract && proposalsProps.length > 0) {\n            const fragmentProposals = multisigContract.interface.getFunction('proposals');\n            const fragmentGetStatus = multisigContract.interface.getFunction('getStatus');\n            multicallContract.aggregate(_.concat(proposalsProps, getStatusProps))\n                .then(([blockNumberRes, resData]: any) => {\n                    const getStatusData = resData.slice(resData.length / 2).map((item: any) => {\n                        return multisigContract.interface.decodeFunctionResult(fragmentGetStatus, item)\n                    })\n                    const proposalsData = resData.slice(0, resData.length / 2).map((item: any, id: number) => {\n                        return {\n                            id: proposalsIds[id],\n                            ...multisigContract.interface.decodeFunctionResult(fragmentProposals, item),\n                            status: getStatusData[id]?.[0] || 0\n                        }\n                    })\n                    setProposals(proposalsData)\n                })\n                .catch((e: any) => {\n                    console.log('error', e.message || e);\n                })\n        }\n    }, [getStatusProps, multicallContract, multisigContract.interface, proposalsIds, proposalsProps, blockNumber])\n\n    const createAndSign = useCallback((proposal: IProposal) => {\n        if (multisigContract) {\n            setPending(prevState => {\n                return {\n                    ...prevState,\n                    create: true\n                }\n            })\n            // multisigContract.createAndSign(proposal, {from: account})\n            //     .then(async (res: any) => {\n            //         const result = await res.wait()\n            //         showAlert({\n            //             text: `Create Sign ${result.status === 1 ? 'success' : 'failed'} ${shortAddress(res.hash)}`,\n            //             cls: result.status === 1 ? classAlert.success : classAlert.error\n            //         })\n            //     })\n            //     .catch((e: any) => {\n            //         console.log(e);\n            //     })\n            //     .finally(() =>\n            //         setPending(prevState => {\n            //             return {\n            //                 ...prevState,\n            //                 create: false\n            //             }\n            //         }))\n            setTimeout(() => {\n                setPending(prevState => {\n                    return {\n                        ...prevState,\n                        create: false\n                    }\n                })\n            }, 2000)\n        }\n    }, [account, multisigContract, showAlert])\n\n    const onSign = useCallback((proposalId: number) => {\n        if (multisigContract) {\n            setPending(prevState => {\n                return {\n                    ...prevState,\n                    sign: true\n                }\n            })\n            multisigContract.sign(proposalId, {from: account})\n                .then(async (res: any) => {\n                    const result = await res.wait()\n                    showAlert({\n                        text: `Sign ${result.status === 1 ? 'success' : 'failed'} ${shortAddress(res.hash)}`,\n                        cls: result.status === 1 ? classAlert.success : classAlert.error\n                    })\n                })\n                .catch((e: any) => {\n                    console.log(e);\n                })\n                .finally(() =>\n                    setPending(prevState => {\n                        return {\n                            ...prevState,\n                            sign: false\n                        }\n                    }))\n        }\n    }, [account, multisigContract, showAlert])\n\n    const onExecute = useCallback((proposalId: number) => {\n        if (multisigContract) {\n            setPending(prevState => {\n                return {\n                    ...prevState,\n                    execute: true\n                }\n            })\n            multisigContract.execute(proposalId, true, {from: account})\n                .then(async (res: any) => {\n                    const result = await res.wait()\n                    showAlert({\n                        text: `Execute ${result.status === 1 ? 'success' : 'failed'} ${shortAddress(res.hash)}`,\n                        cls: result.status === 1 ? classAlert.success : classAlert.error\n                    })\n                })\n                .catch((e: any) => {\n                    console.log(e);\n                })\n                .finally(() => setPending(prevState => {\n                    return {\n                        ...prevState,\n                        execute: false\n                    }\n                }))\n        }\n    }, [account, multisigContract, showAlert])\n    const onCancel = useCallback((proposalId: number) => {\n        if (multisigContract) {\n            setPending(prevState => {\n                return {\n                    ...prevState,\n                    cancel: true\n                }\n            })\n            multisigContract.cancel(proposalId, {from: account})\n                .then(async (res: any) => {\n                    const result = await res.wait()\n                    showAlert({\n                        text: `Cancel ${result.status === 1 ? 'success' : 'failed'} ${shortAddress(res.hash)}`,\n                        cls: result.status === 1 ? classAlert.success : classAlert.error\n                    })\n                })\n                .catch((e: any) => {\n                    console.log(e);\n                })\n                .finally(() => setPending(prevState => {\n                    return {\n                        ...prevState,\n                        cancel: false\n                    }\n                }))\n        }\n    }, [account, multisigContract, showAlert])\n\n    return useMemo(() => {\n        return {\n            createAndSign,\n            pending,\n            multisigContract,\n            proposals,\n            onSign,\n            onCancel,\n            onExecute\n        }\n    }, [createAndSign, multisigContract, onCancel, onExecute, onSign, pending, proposals])\n}","import useWeb3Provider from \"./useWeb3Provider\";\nimport {useMemo} from \"react\";\nimport {\n    defaultChainId,\n    MulticallAbi,\n    multicallAddress,\n    MultisigAbi,\n    multisigAddress, SafeStorageAbi,\n    safeStorageAddress, TimelockAbi, timelockAddress\n} from \"../config\";\nimport {getContract} from \"../util/contracts\";\n\nexport const useMultisigContract = () => {\n    const provider = useWeb3Provider();\n    return useMemo(() => {\n        return getContract(MultisigAbi, multisigAddress[defaultChainId], provider.getSigner())\n    }, [provider])\n}\nexport const useMulticallContract = () => {\n    const provider = useWeb3Provider();\n    return useMemo(() => {\n        return getContract(MulticallAbi, multicallAddress[defaultChainId], provider.getSigner())\n    }, [provider])\n}\nexport const useSafeStorageContract = () => {\n    const provider = useWeb3Provider();\n    return useMemo(() => {\n        return getContract(SafeStorageAbi, safeStorageAddress[defaultChainId], provider.getSigner())\n    }, [provider])\n}\nexport const useTimelockContract = () => {\n    const provider = useWeb3Provider();\n    return useMemo(() => {\n        return getContract(TimelockAbi, timelockAddress[defaultChainId], provider.getSigner())\n    }, [provider])\n}","import React, {useCallback, useState} from 'react';\nimport classes from './CreateProposal.module.scss';\nimport {ProposalDetails} from \"./index\";\nimport {SubmitHandler, useForm} from \"react-hook-form\";\nimport _ from \"lodash\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport {toWei} from \"web3-utils\";\nimport {useMultisig} from \"../../hooks/useMultisig\";\nimport {defaultChainId, safeStorageAddress} from \"../../config\";\n\ninterface IData {\n    target: string,\n    value: string,\n    method: string,\n    args: string,\n    callDatas: string,\n}\n\nfunction CreateProposal() {\n\n    const [countInputsBlock, setCountInputsBlock] = useState<number[]>([0]);\n\n    const {account} = useWeb3React()\n    const {createAndSign, pending, multisigContract} = useMultisig()\n\n    const {register, formState: {isValid, errors}, handleSubmit, reset, getValues, control, setValue} = useForm({\n        mode: \"onChange\",\n        reValidateMode: \"onChange\",\n    })\n\n    const onSubmit: SubmitHandler<any> = useCallback((data) => {\n        const dataObj: { [id: string]: IData } = {}\n        let description = '';\n        for (const dataKey in data) {\n            if (data.hasOwnProperty(dataKey) && /-/.test(dataKey)) {\n                const [key, id] = dataKey.split('-')\n                if (key && id) {\n                    if (key === 'description') {\n                        description = data[dataKey]\n                    } else {\n                        dataObj[id] = {\n                            ...dataObj[id],\n                            [key]: data[dataKey]\n                        }\n                    }\n                }\n            }\n        }\n        if (Object.values(dataObj).length > 0) {\n            const contractData: { targets: string[], values: string[], signatures: string[], calldatas: string[], description: string, callFrom: string } = {\n                targets: [],\n                values: [],\n                signatures: [],\n                calldatas: [],\n                description,\n                callFrom: safeStorageAddress[defaultChainId]\n            }\n            for (const item of Object.values(dataObj)) {\n                const {target, value, callDatas} = item\n                contractData.targets.push(target);\n                contractData.values.push(toWei(value));\n                contractData.calldatas.push(callDatas);\n            }\n            createAndSign(contractData)\n        }\n    }, [createAndSign])\n\n    const addInputsBlockHandler = useCallback(() => {\n        const lastNumber = _.last(countInputsBlock)\n        setCountInputsBlock([...countInputsBlock, lastNumber !== undefined ? lastNumber + 1 : 0])\n    }, [countInputsBlock])\n\n    const removeInputsBlockHandler = useCallback((id: number) => {\n        setCountInputsBlock(_.remove(countInputsBlock, item => item !== id))\n        const result = getValues()\n        const newData: { [key: string]: string } = {}\n        for (const resultKey in result) {\n            if (result.hasOwnProperty(resultKey) && /-/.test(resultKey)) {\n                const resSplit = resultKey.split('-')\n                const current_id = parseInt(resSplit[1]);\n                if (Object.keys(result).length > 5 && resSplit[0] === 'description' && current_id === id) {\n                    newData[`description-${current_id + 1}`] = result[resultKey]\n                }\n                if (current_id !== id) {\n                    newData[resultKey] = result[resultKey]\n                }\n            }\n        }\n        reset(newData)\n    }, [countInputsBlock, getValues, reset])\n\n    const setValueHandler = useCallback((key, value) => {\n        setValue(key, value)\n    }, [setValue])\n\n    return (\n        <div className={['container', classes.CreateProposal].join(' ')}>\n            <div className=\"card\">\n                <h2 className=\"card-title\">Create proposal</h2>\n                <h3 className=\"card-subtitle\">Proposal details <button onClick={() => {\n                    reset({})\n                    setCountInputsBlock([0])\n                }} type='button' className=\"button\">Clear all</button></h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {\n                        countInputsBlock.map((id, cid) => {\n                            const isFirst = cid === 0;\n                            return (\n                                <ProposalDetails\n                                    setValue={setValueHandler}\n                                    control={control}\n                                    showDescription={isFirst}\n                                    onRemove={removeInputsBlockHandler}\n                                    key={`ProposalDetails-${id}`}\n                                    id={id}\n                                    register={register}\n                                    errors={errors}/>\n                            )\n                        })\n                    }\n                    <div className={classes.ButtonBlock}>\n                        <div className={classes.Left}>\n                            <p className={classes.ButtonDesc}>\n                                Add one more action to this proposal\n                            </p>\n                            <button onClick={addInputsBlockHandler} type='button' className=\"button\">+</button>\n                        </div>\n                        <button className=\"button\"\n                                disabled={!isValid || !account || pending['create'] || !multisigContract}\n                                type='submit'>\n                            {pending['create'] ? 'Sending' : 'Send'}\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateProposal;","import {AxiosResponse} from \"axios\";\n\nexport const apiKey = '4FWUBS33WY23N5PKMD64AC75XGS88R27XN'\n\nexport const baseAPI = {\n    '56': 'https://api.bscscan.com',\n    '97': 'https://api-testnet.bscscan.com',\n}\n\nexport const handle = (promise: Promise<AxiosResponse<any>>) => {\n    return promise\n        .then(data => ([data, undefined]))\n        .catch(error => Promise.resolve([undefined, error]));\n}","import {apiKey, baseAPI} from \"./index\";\nimport axios from \"axios\";\nimport {defaultChainId} from \"../config\";\n\nexport async function getABI(address: string) {\n    return await axios.get(`${baseAPI[defaultChainId]}/api?module=contract&action=getabi&address=${address}&apikey=${apiKey}`)\n}","import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport classes from './CreateProposal.module.scss';\nimport {timelockAddress} from \"../../config\";\nimport {Control, UseFormRegister} from \"react-hook-form/dist/types/form\";\nimport {FieldErrors} from \"react-hook-form/dist/types/errors\";\nimport {useProposal} from \"../../hooks/useProposal\";\nimport {useWatch} from \"react-hook-form\";\nimport {isAddress} from \"ethers/lib/utils\";\nimport _ from 'lodash';\n\ninterface ProposalDetailsProps {\n    register: UseFormRegister<any>,\n    errors: FieldErrors<any>,\n    id: number,\n    onRemove: (id: number) => void,\n    showDescription: boolean,\n    control: Control,\n    setValue: (key: string, value: string) => void\n}\n\nfunction ProposalDetails({register, errors, id, onRemove, showDescription = false, control, setValue}: ProposalDetailsProps) {\n\n    const [currentMethod, setCurrentMethod] = useState<any>(null);\n\n    const isPayable = useMemo(() => {\n        if (currentMethod) {\n            return currentMethod.stateMutability === \"payable\"\n        }\n        return false\n    }, [currentMethod])\n\n    const target = useWatch({\n        control,\n        name: `target-${id}`\n    })\n\n    const inputs = useWatch({\n        control,\n        name: `inputs-${id}`\n    })\n\n    const method = useWatch({\n        control,\n        name: `method-${id}`\n    })\n    const {contractFunc, contractInterface} = useProposal(target)\n\n    const onHexHandler = useCallback(() => {\n        if (contractInterface && method  && currentMethod && (currentMethod?.inputs.length === 0 || inputs)) {\n            const fragment = contractInterface.getFunction(method)\n            const inputsArr = inputs?.split(',').map((input: any) => input.trim()).filter((item: any) => Boolean(item)) || []\n            if (currentMethod.inputs.length === inputsArr.length) {\n                const callData = contractInterface.encodeFunctionData(fragment, inputsArr)\n                setValue(`callDatas-${id}`, callData)\n            }\n        } else {\n            setValue(`callDatas-${id}`, '')\n        }\n    }, [contractInterface, currentMethod, id, inputs, method, setValue])\n\n    useEffect(() => {\n        onHexHandler()\n    }, [onHexHandler])\n\n\n    useEffect(() => {\n        const curMethod = _.find(contractFunc, (item) => item.name === method);\n        if (curMethod && contractInterface) {\n            setCurrentMethod(curMethod)\n        }\n    }, [contractFunc, contractInterface, id, method, setValue])\n\n    const onInputsValidate = useCallback((value) => {\n        const arrValue = value.split(',').filter((item: any) => Boolean(item))\n        if (!currentMethod) return ''\n        let isEmptyArgs = false\n        for (const item of arrValue) {\n            if (!Boolean(item.trim())) {\n                isEmptyArgs = true\n                break\n            }\n        }\n        const inputsForMethod = currentMethod.inputs\n        if (inputsForMethod.length !== arrValue.length || (inputsForMethod.length > 0 && isEmptyArgs)) return 'Count arguments error';\n        let isValid = true\n        for (const key in arrValue) {\n            const inputType = inputsForMethod[key].type;\n            if (inputType === 'address') {\n                if (!isAddress(arrValue[key])) {\n                    isValid = false\n                    break\n                }\n            } else if (arrValue[key].trim() === '') {\n                isValid = false\n                break\n            }\n        }\n        return isValid || 'Error inputs'\n    }, [currentMethod])\n\n\n    const renderInputsName = useCallback(() => {\n        if (currentMethod) {\n            const inputsNames = currentMethod.inputs.map((item: any) => [item.name, item.type].join(': '))\n            return inputsNames.join('; ')\n        }\n        return null\n    }, [currentMethod])\n\n    return (\n        <div className={classes.ProposalDetails}>\n            <div className={classes.ProposalColumn}>\n                <label className={'label'} htmlFor={`target-${id}`}>Target</label>\n                <input className={['input', errors[`target-${id}`] ? 'error' : ''].join(' ')}\n                       type=\"text\" {...register(`target-${id}`, {\n                    validate: {\n                        isAddress: value => isAddress(value) || 'Is not address'\n                    },\n                })}\n                />\n                {\n                    errors[`target-${id}`] && <p className={'error-message'}>{errors[`target-${id}`]?.message}</p>\n                }\n                {\n                    isPayable && <label className={'label'} htmlFor={`value-${id}`}>Value</label>\n                }\n                <input type={isPayable ? 'number' : \"hidden\"}\n                       className={isPayable ? ['input', errors[`value-${id}`] ? 'error' : ''].join(' '): ''}\n                       {...register(`value-${id}`, {\n                           value: '0',\n                           validate: value => value >= 0 || 'More then Zero'\n                       })}\n                />\n                {\n                    isPayable && errors[`value-${id}`] && <p className={'error-message'}>{errors[`value-${id}`]?.message}</p>\n                }\n                <input type=\"hidden\" {...register(`callDatas-${id}`, {value: ''})}/>\n                <label className={'label'} htmlFor={`method-${id}`}>Method</label>\n                <select\n                    className={['input', errors[`method-${id}`] ? 'error' : ''].join(' ')} {...register(`method-${id}`, {\n                        required: true,\n                        minLength: {\n                            value: 3,\n                            message: 'Don`t choose method'\n                        }\n                    }\n                )} id={`method-${id}`}>\n                    <option value=\"\">Please select method</option>\n                    {\n                        contractFunc && contractFunc.map((func) => {\n                            return (\n                                <option key={`${id}-select-${func.name}`} value={func.name}>{func.name}</option>\n                            )\n                        })\n                    }\n                </select>\n                {\n                    errors[`method-${id}`] && <p className={'error-message'}>{errors[`method-${id}`]?.message}</p>\n                }\n                <label className={'label'}\n                       htmlFor={`inputs-${id}`}>Arguments {currentMethod && `[${renderInputsName()}]`}</label>\n                <input disabled={currentMethod?.inputs?.length === 0} className={['input', errors[`inputs-${id}`] ? 'error' : ''].join(' ')}\n                       placeholder={`arguments via ','`} id={`inputs-${id}`}\n                       type=\"text\" {...register(`inputs-${id}`, {\n                    required: false,\n                    validate: onInputsValidate\n                    // minLength: {\n                    //     value: 5,\n                    //     message: 'Don`t arguments'\n                    // }\n                })}/>\n                {\n                    errors[`inputs-${id}`] && <p className={'error-message'}>{errors[`inputs-${id}`]?.message}</p>\n                }\n            </div>\n            {\n                showDescription && <div className={classes.ProposalColumn}>\n                    <label className={'label'} htmlFor={`description-${id}`}>Description</label>\n                    <textarea\n                        className={['input', errors[`description-${id}`] ? 'error' : ''].join(' ')} {...register(`description-${id}`, {\n                        required: true, maxLength: {\n                            value: 100,\n                            message: 'Max 100 symbols'\n                        }\n                    })}\n                        id={`description-${id}`}/>\n                    {\n                        errors[`description-${id}`] &&\n                        <p className={'error-message'}>{errors[`description-${id}`]?.message}</p>\n                    }\n                </div>\n            }\n            <div className={classes.ButtonBlock}>\n                <button onClick={() => onRemove(id)} type='button' className=\"button\">Remove</button>\n            </div>\n        </div>\n    );\n}\n\nexport default ProposalDetails;","import {useCallback, useEffect, useState} from 'react';\nimport {Interface, isAddress} from \"ethers/lib/utils\";\nimport {handle} from '../api';\nimport {getABI} from \"../api/bsc\";\nimport _ from 'lodash';\nimport {useAlert} from \"./useAlert\";\nimport {classAlert} from \"../contexts/AlertProvider\";\n\nexport function useProposal(address: string) {\n\n    const [contractFunc, setContractFunc] = useState<any[]>([]);\n    const [contractInterface, setContractInterface] = useState<Interface | null>(null);\n\n    const {showAlert} = useAlert()\n\n    const getABIHandle = useCallback( async (address) => {\n        try {\n            const [addRes, addErr] = await handle(getABI(address))\n            if (addRes?.data) {\n                const {result} = addRes?.data\n                if (result) {\n                    if (result === 'Contract source code not verified') {\n                        showAlert({text: 'Contract source code not verified', cls: classAlert.error})\n                        return\n                    }\n                    setContractInterface(new Interface(result))\n                    const payableFunc = JSON.parse(result).filter((item: any) => item.type === 'function' && (item.stateMutability === \"nonpayable\" || item.stateMutability === \"payable\"))\n                    setContractFunc(_.uniqBy(payableFunc, (func) => func.name))\n                }\n            } else {\n                console.log('addErr', addErr);\n            }\n        } catch (e: any) {\n            console.log('getABI', e.message || e);\n        }\n    }, [showAlert])\n\n    useEffect(() => {\n        if (isAddress(address)) {\n            getABIHandle(address)\n        } else {\n            setContractFunc([])\n        }\n    }, [address, getABIHandle])\n\n\n    return {\n        contractFunc,\n        contractInterface\n    }\n}\n\n","import React from 'react';\nimport classes from './ProposalsTable.module.scss';\nimport {EStatus, Status, useMultisig} from \"../../hooks/useMultisig\";\n\nfunction ProposalsTable() {\n\n    const {proposals, onCancel, pending, onSign, onExecute} = useMultisig()\n\n    return (\n        <div className={classes.Wrapper}>\n            <table className={classes.ProposalsTable}>\n                <thead>\n                <tr>\n                    <th>Proposal id</th>\n                    <th>Status</th>\n                    <th>Code</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    proposals.map((proposal) => {\n                        return (\n                            <tr key={`Proposal-${proposal.id}`}>\n                                <td>{proposal.id}</td>\n                                <td>{Status[proposal.status]}</td>\n                                <td>{proposal.description}</td>\n                                <td>\n                                    {\n                                        (proposal.status === EStatus.INITIALIZED || proposal.status === EStatus.QUEUED) &&\n                                        <button\n                                            onClick={() => onCancel(proposal.id)}\n                                            disabled={pending['cancel']}\n                                            className=\"button\"\n                                        >\n                                            {pending['cancel'] ? '✖ Canceling' : '✖ Cancel'}\n                                        </button>\n                                    }\n                                    <button\n                                        onClick={() => {\n                                            if (proposal.status === EStatus.QUEUED) {\n                                                onExecute(proposal.id)\n                                            } else {\n                                                onSign(proposal.id)\n                                            }\n                                        }}\n                                        disabled={proposal.status === EStatus.CANCELLED\n                                        || proposal.status === EStatus.EXECUTED\n                                        || pending['sign']\n                                        || pending['execute']\n                                        }\n                                        className=\"button\">\n                                        {\n                                            proposal.status === EStatus.QUEUED\n                                                ? (pending['sign'] ? '▶ Executing' : '▶ Execute')\n                                                : (pending['sign'] ? '✎ Signing' : '✎ Sign')\n                                        }\n                                    </button>\n                                </td>\n                            </tr>\n                        )\n                    })\n                }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProposalsTable;","import React from 'react';\nimport classes from './Proposals.module.scss';\nimport ProposalsTable from \"../ProposalsTable/ProposalsTable\";\n\nfunction Proposals() {\n    return (\n        <div className={['container', classes.Proposals].join(' ')}>\n            <div className=\"card\">\n                <h2 className=\"card-title\">Proposals</h2>\n                <ProposalsTable/>\n            </div>\n        </div>\n    );\n}\n\nexport default Proposals;","import React, {FunctionComponent, useEffect} from 'react';\nimport {useAlert} from \"../../hooks/useAlert\";\nimport classes from './Alert.module.scss';\n\nconst Alert: FunctionComponent = () => {\n    const {alert, hideAlert} = useAlert()\n    const cls = [classes.Alert, classes[alert.cls]];\n\n    useEffect(() => {\n        if (alert.show) {\n            const delay = setTimeout(() => {\n                hideAlert()\n            }, 5000)\n            return () => {\n                clearTimeout(delay);\n            }\n        }\n    }, [alert, hideAlert]);\n\n    if (!alert.show) {\n        return null;\n    }\n\n    return (\n        <div className={classes.Wrapper}>\n            <div className={cls.join(' ')}>\n                <div className={classes.Text}>\n                    {alert.text}\n                </div>\n                <button onClick={hideAlert}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import React, {useEffect} from 'react';\nimport './App.scss';\nimport useAuth from \"./hooks/useAuth\";\nimport {Header} from \"./components/Header\";\nimport {CreateProposal} from \"./components/CreateProposal\";\nimport {Proposals} from \"./components/Proposals\";\nimport {Alert} from \"./UI/Alert\";\n\nfunction App() {\n\n    const {login} = useAuth()\n\n    useEffect(() => {\n        login()\n    }, [])\n  return (\n    <div className=\"App\">\n        <Alert/>\n        <Header/>\n        <CreateProposal/>\n        <Proposals/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Web3ReactProvider} from '@web3-react/core';\nimport React from 'react';\nimport {getLibrary} from \"./util/web3React\";\nimport AlertProvider from \"./contexts/AlertProvider\";\n\ninterface Props {\n    children: React.ReactNode\n}\n\nfunction Providers({children}: Props) {\n    return (\n        <Web3ReactProvider getLibrary={getLibrary}>\n            <AlertProvider>\n                {children}\n            </AlertProvider>\n        </Web3ReactProvider>\n    );\n}\n\nexport default Providers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Providers from \"./Providers\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Providers>\n            <App/>\n        </Providers>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateProposal\":\"CreateProposal_CreateProposal__26XU3\",\"ProposalDetails\":\"CreateProposal_ProposalDetails__n-zuW\",\"ProposalColumn\":\"CreateProposal_ProposalColumn__-6QdC\",\"ButtonBlock\":\"CreateProposal_ButtonBlock__1chTq\",\"Left\":\"CreateProposal_Left__2Z6sg\",\"ButtonDesc\":\"CreateProposal_ButtonDesc__3oyfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Alert_Wrapper__2Rb8C\",\"showAlert\":\"Alert_showAlert__3wNYK\",\"Alert\":\"Alert_Alert__2HTUm\",\"Error\":\"Alert_Error__1oOCl\",\"Info\":\"Alert_Info__1VqG2\",\"Success\":\"Alert_Success__1LmTk\",\"Text\":\"Alert_Text__1iUx7\"};"],"sourceRoot":""}